#pragma once
#include "API.h"

CU_NS_BEGIN

//
//	PF_L8,
//	PF_L16,
//	PF_A8,
//	PF_A4L4,
//	PF_R5G6B5,
//	PF_B5G6R5,
//	PF_R3G3B2,
//	PF_A4R4G4B4,
//	PF_A1R5G5B5,
//	PF_A2R10G10B10,
//	PF_A2B10G10R10,
//	PF_R9G9B9E5,		//PF_R9G9B9E5_SHAREDEXP
// http://blog.csdn.net/liminled/article/details/45149259
/*
DXGI_FORMAT_AYUV = 100,
DXGI_FORMAT_Y410 = 101,
DXGI_FORMAT_Y416 = 102,
DXGI_FORMAT_NV12 = 103,
DXGI_FORMAT_P010 = 104,
DXGI_FORMAT_P016 = 105,
DXGI_FORMAT_420_OPAQUE = 106,
DXGI_FORMAT_YUY2 = 107,
DXGI_FORMAT_Y210 = 108,
DXGI_FORMAT_Y216 = 109,
DXGI_FORMAT_NV11 = 110,
DXGI_FORMAT_AI44 = 111,
DXGI_FORMAT_IA44 = 112,
DXGI_FORMAT_P8 = 113,
DXGI_FORMAT_A8P8 = 114,
DXGI_FORMAT_B4G4R4A4_UNORM = 115,
DXGI_FORMAT_FORCE_UINT = 0xffffffff
*/
enum PixelFormat
{
	PF_UNKNOWN				= 0,
	PF_R4G4_UNORM			= 1,
	PF_R4G4B4A4_UNORM		= 2,
	PF_B4G4R4A4_UNORM		= 3,
	PF_R5G6B5_UNORM			= 4,
	PF_B5G6R5_UNORM			= 5,
	PF_R5G5B5A1_UNORM		= 6,
	PF_B5G5R5A1_UNORM		= 7,
	PF_A1R5G5B5_UNORM		= 8,
	PF_R8_UNORM				= 9,
	PF_R8_SNORM				= 10,
	PF_R8_USCALED			= 11,
	PF_R8_SSCALED			= 12,
	PF_R8_UINT				= 13,
	PF_R8_SINT				= 14,
	PF_R8_SRGB				= 15,
	PF_R8G8_UNORM			= 16,
	PF_R8G8_SNORM			= 17,
	PF_R8G8_USCALED			= 18,
	PF_R8G8_SSCALED			= 19,
	PF_R8G8_UINT			= 20,
	PF_R8G8_SINT			= 21,
	PF_R8G8_SRGB			= 22,
	PF_R8G8B8_UNORM			= 23,
	PF_R8G8B8_SNORM			= 24,
	PF_R8G8B8_USCALED		= 25,
	PF_R8G8B8_SSCALED		= 26,
	PF_R8G8B8_UINT			= 27,
	PF_R8G8B8_SINT			= 28,
	PF_R8G8B8_SRGB			= 29,
	PF_B8G8R8_UNORM			= 30,
	PF_B8G8R8_SNORM			= 31,
	PF_B8G8R8_USCALED		= 32,
	PF_B8G8R8_SSCALED		= 33,
	PF_B8G8R8_UINT			= 34,
	PF_B8G8R8_SINT			= 35,
	PF_B8G8R8_SRGB			= 36,
	PF_R8G8B8A8_UNORM		= 37,
	PF_R8G8B8A8_SNORM		= 38,
	PF_R8G8B8A8_USCALED		= 39,
	PF_R8G8B8A8_SSCALED		= 40,
	PF_R8G8B8A8_UINT		= 41,
	PF_R8G8B8A8_SINT		= 42,
	PF_R8G8B8A8_SRGB		= 43,
	PF_B8G8R8A8_UNORM		= 44,
	PF_B8G8R8A8_SNORM		= 45,
	PF_B8G8R8A8_USCALED		= 46,
	PF_B8G8R8A8_SSCALED		= 47,
	PF_B8G8R8A8_UINT		= 48,
	PF_B8G8R8A8_SINT		= 49,
	PF_B8G8R8A8_SRGB		= 50,
	PF_A8B8G8R8_UNORM		= 51,
	PF_A8B8G8R8_SNORM		= 52,
	PF_A8B8G8R8_USCALED		= 53,
	PF_A8B8G8R8_SSCALED		= 54,
	PF_A8B8G8R8_UINT		= 55,
	PF_A8B8G8R8_SINT		= 56,
	PF_A8B8G8R8_SRGB		= 57,
	PF_A2R10G10B10_UNORM	= 58,
	PF_A2R10G10B10_SNORM	= 59,
	PF_A2R10G10B10_USCALED	= 60,
	PF_A2R10G10B10_SSCALED	= 61,
	PF_A2R10G10B10_UINT		= 62,
	PF_A2R10G10B10_SINT		= 63,
	PF_A2B10G10R10_UNORM	= 64,
	PF_A2B10G10R10_SNORM	= 65,
	PF_A2B10G10R10_USCALED	= 66,
	PF_A2B10G10R10_SSCALED	= 67,
	PF_A2B10G10R10_UINT		= 68,
	PF_A2B10G10R10_SINT		= 69,
	PF_R16_UNORM			= 70,
	PF_R16_SNORM			= 71,
	PF_R16_USCALED			= 72,
	PF_R16_SSCALED			= 73,
	PF_R16_UINT				= 74,
	PF_R16_SINT				= 75,
	PF_R16_SFLOAT			= 76,
	PF_R16G16_UNORM			= 77,
	PF_R16G16_SNORM			= 78,
	PF_R16G16_USCALED		= 79,
	PF_R16G16_SSCALED		= 80,
	PF_R16G16_UINT			= 81,
	PF_R16G16_SINT			= 82,
	PF_R16G16_SFLOAT		= 83,
	PF_R16G16B16_UNORM		= 84,
	PF_R16G16B16_SNORM		= 85,
	PF_R16G16B16_USCALED	= 86,
	PF_R16G16B16_SSCALED	= 87,
	PF_R16G16B16_UINT		= 88,
	PF_R16G16B16_SINT		= 89,
	PF_R16G16B16_SFLOAT		= 90,
	PF_R16G16B16A16_UNORM	= 91,
	PF_R16G16B16A16_SNORM	= 92,
	PF_R16G16B16A16_USCALED = 93,
	PF_R16G16B16A16_SSCALED = 94,
	PF_R16G16B16A16_UINT	= 95,
	PF_R16G16B16A16_SINT	= 96,
	PF_R16G16B16A16_SFLOAT	= 97,
	PF_R32_UINT				= 98,
	PF_R32_SINT				= 99,
	PF_R32_SFLOAT			= 100,
	PF_R32G32_UINT			= 101,
	PF_R32G32_SINT			= 102,
	PF_R32G32_SFLOAT		= 103,
	PF_R32G32B32_UINT		= 104,
	PF_R32G32B32_SINT		= 105,
	PF_R32G32B32_SFLOAT		= 106,
	PF_R32G32B32A32_UINT	= 107,
	PF_R32G32B32A32_SINT	= 108,
	PF_R32G32B32A32_SFLOAT	= 109,
	PF_R64_UINT				= 110,
	PF_R64_SINT				= 111,
	PF_R64_SFLOAT			= 112,
	PF_R64G64_UINT			= 113,
	PF_R64G64_SINT			= 114,
	PF_R64G64_SFLOAT		= 115,
	PF_R64G64B64_UINT		= 116,
	PF_R64G64B64_SINT		= 117,
	PF_R64G64B64_SFLOAT		= 118,
	PF_R64G64B64A64_UINT	= 119,
	PF_R64G64B64A64_SINT	= 120,
	PF_R64G64B64A64_SFLOAT	= 121,
	PF_B10G11R11_UFLOAT		= 122,
	PF_E5B9G9R9_UFLOAT		= 123,
	PF_D16_UNORM			= 124,
	PF_X8_D24_UNORM			= 125,
	PF_D32_SFLOAT			= 126,
	PF_S8_UINT				= 127,
	PF_D16_UNORM_S8_UINT	= 128,
	PF_D24_UNORM_S8_UINT	= 129,
	PF_D32_SFLOAT_S8_UINT	= 130,
	PF_BC1_RGB_UNORM		= 131,
	PF_BC1_RGB_SRGB			= 132,
	PF_BC1_RGBA_UNORM		= 133,
	PF_BC1_RGBA_SRGB		= 134,
	PF_BC2_UNORM			= 135,
	PF_BC2_SRGB				= 136,
	PF_BC3_UNORM			= 137,
	PF_BC3_SRGB				= 138,
	PF_BC4_UNORM			= 139,
	PF_BC4_SNORM			= 140,
	PF_BC5_UNORM			= 141,
	PF_BC5_SNORM			= 142,
	PF_BC6H_UFLOAT			= 143,
	PF_BC6H_SFLOAT			= 144,
	PF_BC7_UNORM			= 145,
	PF_BC7_SRGB				= 146,
	PF_ETC2_R8G8B8_UNORM	= 147,
	PF_ETC2_R8G8B8_SRGB		= 148,
	PF_ETC2_R8G8B8A1_UNORM	= 149,
	PF_ETC2_R8G8B8A1_SRGB	= 150,
	PF_ETC2_R8G8B8A8_UNORM	= 151,
	PF_ETC2_R8G8B8A8_SRGB	= 152,
	PF_EAC_R11_UNORM		= 153,
	PF_EAC_R11_SNORM		= 154,
	PF_EAC_R11G11_UNORM		= 155,
	PF_EAC_R11G11_SNORM		= 156,
	PF_ASTC_4x4_UNORM		= 157,
	PF_ASTC_4x4_SRGB		= 158,
	PF_ASTC_5x4_UNORM		= 159,
	PF_ASTC_5x4_SRGB		= 160,
	PF_ASTC_5x5_UNORM		= 161,
	PF_ASTC_5x5_SRGB		= 162,
	PF_ASTC_6x5_UNORM		= 163,
	PF_ASTC_6x5_SRGB		= 164,
	PF_ASTC_6x6_UNORM		= 165,
	PF_ASTC_6x6_SRGB		= 166,
	PF_ASTC_8x5_UNORM		= 167,
	PF_ASTC_8x5_SRGB		= 168,
	PF_ASTC_8x6_UNORM		= 169,
	PF_ASTC_8x6_SRGB		= 170,
	PF_ASTC_8x8_UNORM		= 171,
	PF_ASTC_8x8_SRGB		= 172,
	PF_ASTC_10x5_UNORM		= 173,
	PF_ASTC_10x5_SRGB		= 174,
	PF_ASTC_10x6_UNORM		= 175,
	PF_ASTC_10x6_SRGB		= 176,
	PF_ASTC_10x8_UNORM		= 177,
	PF_ASTC_10x8_SRGB		= 178,
	PF_ASTC_10x10_UNORM		= 179,
	PF_ASTC_10x10_SRGB		= 180,
	PF_ASTC_12x10_UNORM		= 181,
	PF_ASTC_12x10_SRGB		= 182,
	PF_ASTC_12x12_UNORM		= 183,
	PF_ASTC_12x12_SRGB		= 184,

	PIXEL_FORMAT_MAX,

	PF_FLOAT1 = PF_R32_SFLOAT,
	PF_FLOAT2 = PF_R32G32_SFLOAT,
	PF_FLOAT3 = PF_R32G32B32_SFLOAT,
	PF_FLOAT4 = PF_R32G32B32A32_SFLOAT,
	PF_SBYTE1 = PF_R8_SINT,
	PF_SBYTE2 = PF_R8G8_SINT,
	PF_SBYTE3 = PF_R8G8B8_SINT,
	PF_SBYTE4 = PF_R8G8B8A8_SINT,
	PF_UBYTE1 = PF_R8_UINT,
	PF_UBYTE2 = PF_R8G8_UINT,
	PF_UBYTE3 = PF_R8G8B8_UINT,
	PF_UBYTE4 = PF_R8G8B8A8_UINT,
	PF_SSHORT1 = PF_R16_SINT,
	PF_SSHORT2 = PF_R16G16_SINT,
	PF_SSHORT3 = PF_R16G16B16_SINT,
	PF_SSHORT4 = PF_R16G16B16A16_SINT,
	PF_USHORT1 = PF_R16_UINT,
	PF_USHORT2 = PF_R16G16_UINT,
	PF_USHORT3 = PF_R16G16B16_UINT,
	PF_USHORT4 = PF_R16G16B16A16_UINT,
	PF_SINT1 = PF_R32_SINT,
	PF_SINT2 = PF_R32G32_SINT,
	PF_SINT3 = PF_R32G32B32_SINT,
	PF_SINT4 = PF_R32G32B32A32_SINT,
	PF_UINT1 = PF_R32_UINT,
	PF_UINT2 = PF_R32G32_UINT,
	PF_UINT3 = PF_R32G32B32_UINT,
	PF_UINT4 = PF_R32G32B32A32_UINT,
};

struct CU_API PixelUtil
{
	static uint getFormat(const String& format);
	static uint getBytes(PixelFormat fmt);			// 总共占有多少字节
	static uint getComponents(PixelFormat fmt);		// 返回有多少个元素
	static uint getColorBits(PixelFormat fmt);
	static uint getDepthBits(PixelFormat fmt);
	static uint getStencilBits(PixelFormat fmt);

	static uint getMemorySize(PixelFormat fmt, uint width, uint height, uint depth);
	static uint getImageSize(PixelFormat fmt, uint width, uint height, uint depth, uint mipmaps, uint faces);

	static bool isCompressed(PixelFormat fmt);
	static bool isDepth(PixelFormat fmt);
	static bool isStencil(PixelFormat fmt);
	static bool isDepthStencil(PixelFormat fmt);
	static bool isAlpha(PixelFormat fmt);
	static bool isFloat(PixelFormat fmt);
	static bool isInteger(PixelFormat fmt);
	static bool isNormalized(PixelFormat fmt);
	static bool isScaled(PixelFormat fmt);
	static bool isSRGB(PixelFormat fmt);
	static bool isSigned(PixelFormat fmt);
	static bool isUnsigned(PixelFormat fmt);
	//static bool isLuminance(PixelFormat fmt);
};

struct PixelData
{
	uint32_t x;
	uint32_t y;
	uint32_t z;
	uint32_t width;
	uint32_t height;
	uint32_t depth;
	PixelFormat format;
	char* data;
	PixelData(){ memset(this, 0, sizeof(PixelData)); }
	PixelData(uint32_t width, uint32_t height, char* data)
		:x(0), y(0), z(0), width(width), height(height), data(data){}
};

CU_NS_END
